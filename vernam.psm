#ifDef proc::xPblze6

	#set proc::xPblze6::scrpdSize, 	64 ; [64, 128, 256]
	#set proc::xPblze6::clkFreq, 	100000000 ; in Hz
	
	#set IOdev::BRAM0::en, 			TRUE
	#set IOdev::BRAM0::type, 		mem
	#set IOdev::BRAM0::size, 		4096
	
	#set instmem::pageSize,			4096
	#set instmem::pageCount, 		1
	#set instmem::sharedMemLocation, 	loMem ;[ hiMem, loMem ]
	#set IOdev::BRAM0::value, 			instMem
	
	#set IOdev::BRAM0::vhdlEn,			TRUE
	#set IOdev::BRAM0::vhdlEntityName,	"BRAM0"
	#set IOdev::BRAM0::vhdlTmplFile,	"ROM_form.vhd"
	#set IOdev::BRAM0::vhdlTargetFile,	"BRAM0.vhd" ; target file - will be created
	
#endIf
#ORG ADDR, 0 	;instruction starts from 0 address
	
pico_one: 		RDPRT s0, 0 	; Load value of h
			RDPRT s1, 1 	; Load value of o
			RDPRT s2, 2 	; Load value of p
			RDPRT s3, 3 	; Load value of e	
					
			WRPRT s4, 4 	; write results to RAM
			WRPRT s5, 5
			WRPRT s6, 6
			WRPRT s7, 7
			
end: JUMP end 				; Final instruction

v_cipher:		LOAD s4, s0 	; load message values to new reg to compute cipher
			LOAD s5, s1
			LOAD s6, s2
			LOAD s7, s3
			XOR s4, sA	; computes cipher
			XOR s5, sB
			XOR s6, sC
			XOR s7, sD
			RET

;interrupt used to read keys from pico2 and compute cipher text			
ISR:		NOP
		NOP 			; dummy instruction
		RDPRT sA, 20		; read keys from picoblaze2
		RDPRT sB, 21
		RDPRT sC, 22
		RDPRT sD, 23
		
		CALL v_cipher
		
		WRPRT s4, 0x04
		WRPRT s5, 0x05
		WRPRT s6, 0x06
		WRPRT s7, 0x07
		
		RETI ENABLE 		; return from interrupt
		#ORG ADDR, 4095 	; interrupt address
		JUMP ISR
