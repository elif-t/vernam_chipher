#ifDef proc::xPblze6

	#set proc::xPblze6::scrpdSize, 	64 ; [64, 128, 256]
	#set proc::xPblze6::clkFreq, 		100000000 ; in Hz
	
	#set IOdev::BRAM0::en, 			TRUE
	#set IOdev::BRAM0::type, 			mem
	#set IOdev::BRAM0::size, 			1024
	#set instmem::pageSize,			1024
	#set instmem::pageCount, 			1
	#set instmem::sharedMemLocation, 	loMem ;[ hiMem, loMem ]
	#set IOdev::BRAM0::value, 			instMem
	
	#set IOdev::BRAM0::vhdlEn,			TRUE
	#set IOdev::BRAM0::vhdlEntityName,	"BRAM0"
	#set IOdev::BRAM0::vhdlTmplFile,	"ROM_form.vhd"
	#set IOdev::BRAM0::vhdlTargetFile,	"BRAM0.vhd "
	;#set ASM::dfltCharset, utf-8
	
#endIf

	#ORG ADDR, 0
	#EQU message1 "h"
	#EQU message2 "o"
	#EQU message3 "p"
	#EQU message4 "e"
	#EQU key , 0x12
	#EQU key_2 , 0x20
	#EQU mem_, 0x00
	
	LOAD sF, key ; load seed value into accumulator
	LOAD sE, key_2
	
	LOAD s0, message1
	CALL simon
	LOAD s5, s0
	RDMEM sF, mem_
	XOR s5, sF ; vernam ency.
	
	LOAD s1, message2
	CALL simon
	LOAD s6, s1
	RDMEM sF, mem_
	XOR s6, sF ; vernam ency.
	
	LOAD s2, message3
	CALL simon
	LOAD s7, s2
	RDMEM sF, mem_
	XOR s7, sF ; vernam ency.
	
	LOAD s3, message4
	CALL simon
	LOAD s8, s3
	RDMEM sF, mem_
	XOR s8, sF ; vernam ency.
	
simon:	ROL sF
		ROL sE
		XOR sF, sE
		WRMEM sF, mem_
		RET
